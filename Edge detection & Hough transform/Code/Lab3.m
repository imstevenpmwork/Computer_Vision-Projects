clc; close all; clear

%% Lab3 - Main Script
% Group Participants: 
%   Filip Hesse (4889393)
%   Justin Lee (4885003)
%   Steven Palma (4882385)
%
% NOTE: All the images are created and saved in the 
% /plots folder, which is auto generated by the script. 
% The script does not show them in order to increase 
% runtime and prevent spam.

img_titles = [ "boccadasse.jpg", "highway1.jpg", "highway2.jpg"];
img_titles_cropped = crop_titles(img_titles);


%% TASK 1
% -----------------------------------------------
%% Read image
img = imread(char(img_titles(1)));
img = rgb2gray(img);
disp_and_save_fig(img, strcat('0_',img_titles_cropped(1)), false, false)
%Define Stadard deviations for laplacian of gaussian
standard_deviations = [1 1.5 2 3.5];
for sd = standard_deviations
    % Compute Laplacian of Gaussian
    [LoG] = laplacian_of_gaussian(sd);
    disp_and_save_fig(LoG, strcat('1_LoG_',num2str(sd)), false, true)

    %Convolve image with LoG
    img_conv_LoG=conv2(img,LoG,'same');
    disp_and_save_fig(img_conv_LoG, strcat('1_img_conv_LoG_',num2str(sd)), false, false)
    
    %Plot of difference of the image with itself shifted with one pixel to
    %get an estimation of a good threshold
    disp_and_save_fig(img_conv_LoG(:,1:end-1)-img_conv_LoG(:,2:end), strcat('1_img_conv_LoG_diff',num2str(sd)), true, false,[-50:0.2:50])
    
    %Perform edge detection with LoG
    threshold = [0.1 0.5 1 2 4 8 10 12 14 16];    %Threshold is the minimum 
                    % difference of the pixels on both sides of the zero-
                    % crossing for edge detection
    for th = threshold
        img_edges_own = edge_detection_LoG_own(img_conv_LoG, th);
        disp_and_save_fig(img_edges_own, strcat('1_edge_own_sd',num2str(sd),'thr_',num2str(th)), false, false)
        %Compare results with edge detection prvoded by matlab
        disp_and_save_fig(edge(img,'log',th/255,sd), strcat('1_edge_matlab_sd',num2str(sd),'thr_',num2str(th)), false, false)
    end 
end


%% TASK 2
% -----------------------------------------------
for i=2:length(img_titles)
    %% Read image
    img = imread(char(img_titles(i)));
    img = rgb2gray(img);
    disp_and_save_fig(img, strcat('0_',img_titles_cropped(i)), false, false)
    if (i == 2)
        hough_transform(img, strcat('2_',img_titles_cropped(i)),4,true)
    else
        hough_transform(img, strcat('2_',img_titles_cropped(i)),5,false)
    end
    

end



